#!/bin/bash

if [ -e /etc/default/locale ]; then
. /etc/default/locale
fi

export LANG

mkdir -p /var/lib/vdr/.kodi/userdata/Database/
mkdir -p /var/lib/vdr/.kodi/userdata/keymaps

#sqlite3  /var/lib/vdr/.kodi/userdata/Database/TV20.db<<EOF
#PRAGMA foreign_keys=OFF;
#BEGIN TRANSACTION;
#CREATE TABLE version (idVersion integer, iCompressCount integer);
#INSERT INTO "version" VALUES(20,0);

#CREATE TABLE clients (idClient integer primary key, sName    varchar(64), sUid     varchar(32));
#INSERT INTO "clients" VALUES(1,'VDR XVDR Client','pvr.vdr.xvdr');

#CREATE TABLE channels (idChannel            integer primary key, iUniqueId            integer, bIsRadio             bool, bIsHidden            bool, sIconPath            varchar(255), sChannelName         varchar(64), bIsVirtual           bool, bEPGEnabled          bool, sEPGScraper          varchar(32), iLastWatched         integer,iClientId            integer, iClientChannelNumber integer, sInputFormat         varchar(32), sStreamURL           varchar(255), iEncryptionSystem    integer, idEpg                integer);

#CREATE TABLE channelgroups (idGroup    integer primary key,bIsRadio   bool, sName      varchar(64));
#INSERT INTO "channelgroups" VALUES(1,1,'All radio channels');

#CREATE TABLE map_channelgroups_channels (idChannel      integer, idGroup        integer, iChannelNumber integer);

#CREATE TABLE channelsettings (idChannel            integer primary key, iInterlaceMethod     integer, iViewMode            integer, fCustomZoomAmount    float, fPixelRatio          float, iAudioStream         integer, iSubtitleStream      integer,fSubtitleDelay       float, bSubtitles           bool, fBrightness          float, fContrast            float, fGamma               float,fVolumeAmplification float, fAudioDelay          float, bOutputToAllSpeakers bool, bCrop                bool, iCropLeft            integer, iCropRight           integer, iCropTop             integer, iCropBottom          integer, fSharpness           float, fNoiseReduction      float, fCustomVerticalShift float, bCustomNonLinStretch bool, bPostProcess         bool, iScalingMethod       integer, iDeinterlaceMode     integer );

#CREATE UNIQUE INDEX idx_channels_iClientId_iUniqueId on channels(iClientId, iUniqueId);
#CREATE INDEX idx_channelgroups_bIsRadio on channelgroups(bIsRadio);
#CREATE UNIQUE INDEX idx_idGroup_idChannel on map_channelgroups_channels(idGroup, idChannel);

#COMMIT;
#EOF

#sqlite3  /var/lib/vdr/.kodi/userdata/Database/Addons15.db<<EOF
#PRAGMA foreign_keys=OFF;
#BEGIN TRANSACTION;
#CREATE TABLE version (idVersion integer, iCompressCount integer);
#INSERT INTO "version" VALUES(15,0);
#CREATE TABLE addon (id integer primary key, type text,name text, summary text, description text, stars integer,path text, addonID text, icon text, version text, changelog text, fanart text, author text, disclaimer text,minversion text);
#CREATE TABLE dependencies (id integer, addon text, version text, optional boolean);
#CREATE TABLE repo (id integer primary key, addonID text,checksum text, lastcheck text);
#CREATE TABLE addonlinkrepo (idRepo integer, idAddon integer);
#CREATE TABLE disabled (id integer primary key, addonID text);
#INSERT INTO "disabled" VALUES(1,'pvr.vdr.vnsi');
#INSERT INTO "disabled" VALUES(2,'pvr.mythtv');
#INSERT INTO "disabled" VALUES(3,'pvr.demo');
#INSERT INTO "disabled" VALUES(5,'pvr.team-mediaportal.tvserver');
#INSERT INTO "disabled" VALUES(6,'pvr.hts');
#CREATE TABLE broken (id integer primary key, addonID text, reason text);
#INSERT INTO "broken" VALUES(1,'plugin.video.tapetv','Dependencies not met');
#INSERT INTO "broken" VALUES(2,'plugin.video.dmax','Dependencies not met');
#INSERT INTO "broken" VALUES(3,'plugin.video.cinemassacre','Dependencies not met');
#INSERT INTO "broken" VALUES(4,'plugin.video.national.geographic','Site changes');
#INSERT INTO "broken" VALUES(5,'skin.simplicity','Dependencies not met');
#INSERT INTO "broken" VALUES(6,'webinterface.wtouch','Dependencies not met');
#CREATE TABLE blacklist (id integer primary key, addonID text, version text);
#CREATE INDEX idxAddon ON addon(addonID);
#CREATE INDEX idxAddonExtra ON addonextra(id);
#CREATE INDEX idxDependencies ON dependencies(id);
#CREATE UNIQUE INDEX ix_addonlinkrepo_1 ON addonlinkrepo ( idAddon, idRepo );
#CREATE UNIQUE INDEX ix_addonlinkrepo_2 ON addonlinkrepo ( idRepo, idAddon );
#CREATE UNIQUE INDEX idxDisabled ON disabled(addonID);
#CREATE UNIQUE INDEX idxBroken ON broken(addonID);
#CREATE UNIQUE INDEX idxBlack ON blacklist(addonID);
#COMMIT;
#EOF


chown -R vdr:vdr /var/lib/vdr/.kodi

#process-template --owner=vdr --group=vdr /var/lib/vdr/.kodi/userdata/sources.xml
process-template --owner=vdr --group=vdr /var/lib/vdr/.kodi/userdata/Lircmap.xml
#process-template --owner=vdr --group=vdr /var/lib/vdr/.kodi/userdata/guisettings.xml
process-template --owner vdr --group vdr /var/lib/vdr/.kodi/userdata/keymaps/remote.xml

